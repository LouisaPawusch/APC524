[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/APC524"]

[project]
name = "APC524"
version = "0.1.0"
description = "APC524 Class Project on Conway's Game of Life"
readme = "README.md"
requires-python = ">=3.11"
authors = [
    { name = "Lara Tobias-Tarsh", email = "lt0663@princeton.edu" },
    { name = "Louisa Pawusch", email = ""},
]
license = { text = "MIT" }
dependencies = [
    "numpy",
    "pandas",
    "matplotlib",
    "pytest",
    "scipy",
    "nox"
]

[dependency-groups]
dev = [
    "pytest",
    "black",
    "uncertainties",
    "pre-commit",
    "ruff",
    "nox"
]

docs = [
    "sphinx >=4.0",
    "furo",
    "myst_parser >=0.13",
    "sphinx-markdown-builder",
    "sphinx_copybutton",
]

[tool.ruff.lint]
extend-select = [
  "B",           # flake8-bugbear
  "I",           # isort
  "ARG",         # flake8-unused-arguments
  "C4",          # flake8-comprehensions
  "EM",          # flake8-errmsg
  "ICN",         # flake8-import-conventions
  "ISC",         # flake8-implicit-str-concat
  "G",           # flake8-logging-format
  "PGH",         # pygrep-hooks
  "PIE",         # flake8-pie
  "PL",          # pylint
  "PT",          # flake8-pytest-style
  "PTH",         # flake8-use-pathlib
  "RET",         # flake8-return
  "RUF",         # Ruff-specific
  "SIM",         # flake8-simplify
  "UP",          # pyupgrade
  "YTT",         # flake8-2020
  "EXE",         # flake8-executable
  "NPY",         # NumPy specific rules
  "PD",          # pandas-vet
]
ignore = [
  "PLR",    # Design related pylint codes
  "PT004",  # Use underscore for non-returning fixture (use usefixture instead)
]
flake8-unused-arguments.ignore-variadic-names = true
isort.required-imports = ["from __future__ import annotations"]

[tool.ruff.lint.per-file-ignores]
"tests/**" = ["T20"]
